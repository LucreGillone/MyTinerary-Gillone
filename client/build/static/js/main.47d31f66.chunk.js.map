{"version":3,"sources":["redux/actions/usersActions.js","components/NavBar.js","components/Header.js","components/Hero.js","components/Footer.js","components/Carousel.js","components/CallToAction.js","pages/Home.js","redux/actions/citiesActions.js","pages/Cities.js","redux/actions/activitiesActions.js","redux/actions/itinerariesActions.js","components/Activity.js","components/Comment.js","components/Comments.js","components/Itinerary.js","components/NoItineraries.js","pages/City.js","pages/SignUp.js","pages/LogIn.js","pages/Error404.js","App.js","redux/reducers/citiesReducers.js","redux/reducers/itinerariesReducers.js","redux/reducers/usersReducers.js","redux/reducers/rootReducer.js","index.js"],"names":["usersActions","signUp","newUser","dispatch","getState","a","axios","post","response","data","success","type","payload","logUser","logOut","logInLS","token","get","headers","Authorization","firstName","src","_id","mapDispatchToProps","connect","state","users","props","className","exact","to","style","backgroundImage","alt","onClick","Header","Hero","autoPlay","muted","loop","id","Footer","items","picture","city","CarouselComp","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","index","CarouselItem","onExiting","onExited","image","Carousel","interval","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","CallToAction","Home","citiesActions","getAllCities","console","log","Error","filterCities","inputValue","getOneCity","infoCities","cities","filteredCities","name","loading","setLoading","useEffect","message","window","scrollTo","showCities","country","placeholder","onChange","e","target","value","activitiesActions","getActivitiesByItinerary","itineraryId","itinerariesActions","getItineraryByCity","cityId","addComment","comment","put","deleteComment","commentId","editComment","likeDislike","Activity","activitiesInfo","Activities","activity","modifyComment","setModifyComment","inputHandler","useRef","updateComment","user","newComment","userId","defaultValue","ref","edit","current","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","renderComment","commentsActions","comments","allComments","setAllComments","update","setUpdate","res","filter","catch","error","forEach","updatedComment","autoComplete","disabled","textValue","activities","setActivities","collapse","setCollapse","setLike","Itineraries","likes","itinerariesLikes","setItinerariesLikes","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","itinerariesInfo","hashtags","hashtag","likeItinerary","heart","includes","itineraryTitle","userPicture","userName","description","repeat","parseInt","price","duration","NoItineraries","selectedCity","oneCity","cityItineraries","itineraries","allCities","history","push","match","params","hero","lastName","email","password","setNewUser","errorInput","setErrorInput","responseGoogle","googleUser","profileObj","givenName","familyName","imageUrl","googleId","google","NavBar","Object","values","some","infoUser","errors","messageError","path","clientId","buttonText","onSuccess","onFailure","cookiePolicy","setLogUser","logGoogleUser","googleFlag","alert","Error404","localStorage","getItem","component","Cities","City","SignUp","LogIn","citiesReducer","action","toLowerCase","startsWith","trim","find","itinerariesReducers","usersReducers","setItem","removeItem","rootReducer","combineReducers","itinerariesReducer","globalStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.47d31f66.chunk.js","sourcesContent":["import axios from \"axios\" \r\n\r\nconst usersActions = {\r\n    signUp: (newUser) => {\r\n        return async (dispatch, getState) => {\r\n            let response = await axios.post(\"https://gillone-mytinerary.herokuapp.com/api/user/signUp\", {...newUser})\r\n            if (response.data.success){\r\n                dispatch({type: \"LOGGED\", payload: response.data.response})\r\n                \r\n            }\r\n           return response \r\n        }\r\n    },\r\n    \r\n    logUser: (logUser) => {\r\n        return async (dispatch, getState) => {\r\n            let response = await axios.post(\"https://gillone-mytinerary.herokuapp.com/api/user/logIn\", {...logUser})\r\n            if (response.data.success){\r\n                dispatch({type: \"LOGGED\", payload: response.data.response})   \r\n            }\r\n            return response\r\n        }\r\n    },\r\n\r\n    logOut: () => {\r\n        return async (dispatch, getState) => {\r\n            dispatch({type: \"LOG_OUT\"})\r\n        }\r\n    },\r\n\r\n    logInLS: (token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                let response = await axios.get(\"https://gillone-mytinerary.herokuapp.com/api/tokenVerification\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \"+token\r\n                }\r\n                \r\n                 })\r\n                dispatch({type: \"LOGGED\", payload: {token, firstName: response.data.firstName, src: response.data.src, _id: response.data._id}})\r\n            } catch (error) {\r\n                return dispatch ({type: \"LOG_OUT\"})\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nexport default usersActions","import {NavLink} from \"react-router-dom\"\r\nimport usersActions from \"../redux/actions/usersActions\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <NavLink exact to=\"/\"><p>Home</p></NavLink>\r\n            <NavLink to=\"/cities\"><p>Cities</p></NavLink>\r\n            {/* <div className=\"user\">  */}\r\n                <div className=\"profilePicContainer\">\r\n                    {props.src\r\n                    ? <div className=\"profilePic\" style={{backgroundImage: `url(\"${props.src}\")`}}></div> \r\n                    : <img src =\"/assets/person-circle.svg\" alt=\"userIcon\"/> }\r\n                </div>\r\n            {/* </div> */}\r\n            {!props.token && <NavLink to=\"/signUp\"><p>Sign up</p></NavLink>}\r\n            {props.token ? <p>{props.firstName}</p> : null }\r\n            {!props.token && <NavLink to=\"/logIn\"><p>Log in</p></NavLink>}\r\n            {props.token && <p onClick={() => props.logOut()}>Log out</p>}\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.users.token,\r\n        firstName: state.users.firstName,\r\n        src: state.users.src\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logOut: usersActions.logOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)","import React from \"react\"\r\nimport Nav from \"../components/NavBar\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Nav/>\r\n            <div className=\"title\">\r\n                <img src=\"/assets/logo.png\" className=\"logo\" alt=\"logo\" />\r\n                <h1>MyTinerary</h1>\r\n                <h2>Find your perfect trip,\r\n                designed by insiders who know and love their cities!</h2>\r\n            </div>   \r\n        </header>               \r\n    )\r\n}\r\n\r\nexport default Header","const Hero = () => {\r\n    return ( \r\n        <div className=\"hero\">\r\n            <video autoPlay=\"autoplay\" muted loop id=\"video\">\r\n                 <source src='/assets/video_hero.mp4' type=\"video/mp4\" />\r\n            </video>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Hero","import {Link} from \"react-router-dom\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"iconsRef\">\r\n                <Link to=\"/\"><img src =\"/assets/home.svg\" alt=\"homeIcon\"/></Link>\r\n                <Link to=\"/cities\"><img src =\"/assets/building.svg\" alt=\"citiesIcon\"/></Link>\r\n                <img src =\"/assets/person-circle.svg\" alt=\"userIcon\"/>\r\n            </div>\r\n            <p>MyTinerary &copy; | Lucrecia Gillone | MindHub 2021</p>\r\n            <div className=\"socialMediaIcons\">\r\n                <img src =\"/assets/instagram.svg\" alt=\"instagramIcon\"/>\r\n                <img src =\"/assets/facebook.svg\" alt=\"facebookIcon\"/>                \r\n                <img src =\"/assets/twitter.svg\" alt=\"twitterIcon\"/>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport { Carousel,  CarouselItem,  CarouselControl,  CarouselIndicators} from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    src : [{\r\n        picture:\"/assets/agra.jpg\",\r\n        city: \"Agra\"\r\n    },\r\n    {\r\n        picture:\"/assets/cairo.jpg\",\r\n        city: \"Cairo\"\r\n    },\r\n    {\r\n        picture:\"/assets/bali.jpg\",\r\n        city: \"Bali\"\r\n    },\r\n    {\r\n        picture:\"/assets/cappadocia.jpg\",\r\n        city: \"Cappadocia\"\r\n    },]     \r\n  },\r\n  {\r\n    src: [{\r\n        picture:\"/assets/machu_picchu.jpg\",\r\n        city: \"Machu Picchu\"\r\n    },\r\n    {\r\n        picture:\"/assets/london.jpg\",\r\n        city: \"London\"\r\n    },\r\n    {\r\n        picture:\"/assets/moscow.jpg\",\r\n        city: \"Moscow\"\r\n    },\r\n    {\r\n        picture:\"/assets/new_york.jpg\",\r\n        city: \"New York\"\r\n    },]\r\n  },\r\n  {\r\n    src: [{\r\n        picture:\"/assets/paris.jpg\",\r\n        city: \"Paris\"\r\n    },\r\n    {\r\n        picture:\"/assets/sydney.jpg\",\r\n        city: \"Sydney\"\r\n    },\r\n    {\r\n        picture:\"/assets/rome.jpg\",\r\n        city: \"Rome\"\r\n    },\r\n    {\r\n        picture:\"/assets/vatnajokull.jpg\",\r\n        city: \"Vatnajokull\"\r\n    },]\r\n  }\r\n];\r\n\r\nconst CarouselComp = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n    const slides = items.map((item, index) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={index}\r\n      >\r\n        <div className=\"photoContainer\">   \r\n            \r\n            <div className=\"photos\"> \r\n                {item.src.map((image) => (\r\n                    <div className=\"photo\" key={image.city}\r\n                        style={{\r\n                        backgroundImage: `url(\"${image.picture}\")`,\r\n                        }}>\r\n                        <h3>{image.city}</h3>\r\n                    </div>\r\n                ))} \r\n            </div>\r\n        </div>\r\n    \r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel \r\n      className=\"carousel-fade\"\r\n      interval=\"3000\"\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n    >\r\n      <CarouselIndicators items={slides} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n      {slides}\r\n      <CarouselControl direction=\"prev\" \r\n      directionText=\"\" \r\n      onClickHandler={previous} />\r\n      <CarouselControl direction=\"next\" directionText=\"\" onClickHandler={next} />\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselComp;","import {Link} from \"react-router-dom\"\r\n\r\nconst CallToAction = () => {\r\n    return (\r\n        <div className=\"callToA\">\r\n              <h3>Ready to take off?</h3>\r\n              <Link to=\"/cities\"><h4>Click Here</h4><img src=\"/assets/plane_ticket.png\" alt=\"planeTicket\"/>\r\n              </Link>\r\n              {/* <div> */}\r\n                  \r\n              {/* </div> */}\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallToAction","import React from \"react\"\r\nimport Header from \"../components/Header\"\r\nimport Hero from \"../components/Hero\"\r\nimport Footer from \"../components/Footer\"\r\nimport CarouselComp from \"../components/Carousel\"\r\nimport CallToAction from \"../components/CallToAction\"\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main>\r\n            <Hero/>\r\n            <Header/>\r\n            <CallToAction/>\r\n            {/* <InfoCards/> */}\r\n            <h2 id=\"popularMyt\">Popular Mytineraries</h2>\r\n            <div className=\"plane\" style={{\r\n                backgroundImage: `url(\"/assets/ventana.png\")`,\r\n                }}>\r\n                <CarouselComp/>\r\n            </div>\r\n            \r\n            <Footer/>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home","import axios from \"axios\"\r\n\r\nconst citiesActions = {\r\n    getAllCities: (token) => {\r\n        return async (dispatch, getState) => {\r\n            let response = await axios.get(\"https://gillone-mytinerary.herokuapp.com/api/cities\")\r\n            \r\n            if (!response.data.success) {\r\n                throw new Error(\"Issues between backend & database\")\r\n            }\r\n            dispatch({type: \"GET_ALL_CITIES\", payload: response.data.response})\r\n        }\r\n    },\r\n\r\n    filterCities: (inputValue) => {\r\n        return (dispatch, getState) => {\r\n        dispatch({type: \"FILTER_CITIES\", payload: inputValue})\r\n        }\r\n    },\r\n\r\n    getOneCity: (_id) => {\r\n        return async (dispatch, getState) => {\r\n        dispatch({type: \"GET_ONE_CITY\", payload: _id})\r\n        }\r\n    }\r\n}\r\n\r\nexport default citiesActions","import Nav from \"../components/NavBar\"\r\nimport Footer from \"../components/Footer\"\r\nimport { useEffect } from \"react\"\r\nimport {useState} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\" \r\nimport citiesActions from \"../redux/actions/citiesActions\"\r\n\r\nconst Cities = (props) => {\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        async function getAllCities() {\r\n            try{\r\n                await props.getAllCities() \r\n            } catch (err){\r\n                console.log(err.message)\r\n                return false\r\n            }\r\n            setLoading(false)\r\n        }\r\n        getAllCities()\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">\r\n            <img src=\"/assets/flying-airplane.gif\" alt=\"plane flying gif\"/>\r\n            <h3>Loading...</h3>\r\n        </div>\r\n    }\r\n\r\n    const showCities = props.infoCities.length > 0  \r\n    ?   props.infoCities.map((city,index) => {\r\n        return (\r\n            <Link to={`/city/${city._id}`} key={index}>\r\n            <div className=\"cityCards\" \r\n            style={{backgroundImage: `url(\"${city.picture}\")`\r\n            }}>\r\n                <div className=\"cardsTitles\">\r\n                    <h3>{city.city}</h3>\r\n                    <h3>-{city.country}</h3>\r\n                </div>\r\n            </div> \r\n            </Link>\r\n        )\r\n    })\r\n    : <h3>We couldn't find a match for your search. Try another city!</h3>\r\n\r\n\r\n    const search = (e) => {\r\n        props.filterCities(e.target.value)\r\n    }\r\n\r\n    // const alphabeticalOrder = JSON.parse(JSON.stringify(props.infoCities))//json stringify\r\n\r\n    // const alphabetical = () => {\r\n    //     alphabeticalOrder.sort(function (a,b) {\r\n    //         return a.alphabeticalOrder.city.localeCompare(b.alphabeticalOrder.city)\r\n    //     })       \r\n    // } \r\n    // console.log()\r\n\r\n    return (\r\n        <div className=\"body\">\r\n                <Nav/> \r\n                     <div style={{backgroundImage: `url(\"/assets/airport_board.jpg\")`}} className=\"boardImg\">\r\n                        </div>\r\n                        <div className=\"inputContainer\">\r\n                        <img src=\"/assets/plane_icon.png\" alt=\"plane icon\"/>\r\n                       <input type=\"text\" placeholder=\"Choose your destination\" onChange={search}/>\r\n                       {/* <button onClick={alphabetical}>A-Z</button> */}\r\n                    </div>\r\n                    <div className=\"citiesContainer\">\r\n                        {showCities}\r\n                    </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        infoCities: state.cities.filteredCities,\r\n        token: state.users.token,\r\n        name: state.users.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n        getAllCities: citiesActions.getAllCities,\r\n        filterCities: citiesActions.filterCities,\r\n}\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities) \r\n","import axios from \"axios\"\r\n\r\nconst activitiesActions = {\r\n    getActivitiesByItinerary: (itineraryId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                let response = await axios.get(`https://gillone-mytinerary.herokuapp.com/api/activities/${itineraryId}`)\r\n                let data = response.data.response\r\n                return data\r\n            } catch (error){\r\n                return {\r\n                    success: false, response: error\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default activitiesActions","import axios from \"axios\" \r\n\r\nconst itinerariesActions = {\r\n    getItineraryByCity: (cityId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                let response = await axios.get(`https://gillone-mytinerary.herokuapp.com/api/itineraries/${cityId}`)\r\n                let data = response.data.response\r\n                dispatch({type: \"GET_ITINERARY_BY_CITYID\", payload: data})\r\n            } catch (error){\r\n                return {\r\n                    success: false, response: error\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    addComment: (itineraryId, comment, token) => {\r\n        return async () => {\r\n            try {\r\n                let response = await axios.put(`https://gillone-mytinerary.herokuapp.com/api/comments/${itineraryId}`, {comment, type: \"addComment\"},\r\n                {headers: {\r\n                    Authorization: \"Bearer \"+token\r\n                    }\r\n                })\r\n                if (response.data.success) {\r\n                    return {\r\n                        success: true, response: response.data.response\r\n                    }\r\n                } else {\r\n                    throw new Error()\r\n                }     \r\n            } catch (error) {\r\n                return {\r\n                    success: false, response: error\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    deleteComment: (itineraryId, commentId, token) => {\r\n        return async (dispatch) => {\r\n            try {\r\n                let response = await axios.put(`https://gillone-mytinerary.herokuapp.com/api/comments/${itineraryId}`, {commentId, type: \"deleteComment\"},\r\n                {headers: {\r\n                    Authorization: \"Bearer \"+token\r\n                    }\r\n                })\r\n                if (response.data.success) {\r\n                    return {\r\n                        success: true\r\n                    }\r\n                } else {\r\n                    throw new Error()\r\n                }\r\n            } catch (error) {\r\n                return {\r\n                    success: false, response: error\r\n                }\r\n            }\r\n        }\r\n    }, \r\n\r\n    editComment: (commentId, comment, token) => {\r\n        return async () => {\r\n            try {\r\n                let response = await axios.put(`https://gillone-mytinerary.herokuapp.com/api/comments/${commentId}`, { comment, type: \"editComment\"},\r\n                {headers: {\r\n                    Authorization: \"Bearer \"+token\r\n                    }\r\n                })\r\n                if (response.data.success) {\r\n                    return {\r\n                        success: true, response: response.data.response\r\n                    }\r\n                } else {\r\n                    throw new Error()\r\n                }\r\n            } catch (error) {\r\n                return {\r\n                    success: false,response: error\r\n                }\r\n            }\r\n        }    \r\n    }, \r\n\r\n    likeDislike: (itineraryId, token) => {\r\n        return async () => {\r\n            try {\r\n                let response = await axios.put(`https://gillone-mytinerary.herokuapp.com/api/itinerary/like/${itineraryId}`, {},\r\n                {headers: {\r\n                    Authorization: \"Bearer \"+token\r\n                    }\r\n                })\r\n                return response\r\n                \r\n            }catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n} \r\n\r\nexport default itinerariesActions","const Activity = (props) => {\r\n    let activitiesInfo = props.Activities\r\n\r\n    return (\r\n    \r\n        <div className=\"activity\">\r\n            <div className=\"activityPic\" style={{backgroundImage:`url(\"${activitiesInfo.src}\")` }}></div>\r\n            <h5>{activitiesInfo.activity}</h5>\r\n        </div>\r\n       \r\n    )\r\n        \r\n}\r\n\r\nexport default Activity","import { useState, useRef, useEffect } from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Comment = (props) => {\r\n    const [modifyComment, setModifyComment] = useState(false)\r\n    const inputHandler = useRef()\r\n    \r\n    useEffect(() => {\r\n        setModifyComment(false)\r\n    }, [props.updateComment])\r\n\r\n    const confirmDeletion = () => {\r\n        Swal.fire({\r\n        title: 'Are you sure?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n        props.delete(props.itineraryId, props.newComment._id, props.token)\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your comment has been deleted.',\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n    }\r\n\r\n    const user = props.newComment.userId._id === props._id\r\n    const comment = <div className=\"textArea\">\r\n                        <div>\r\n                            {!modifyComment \r\n                            ? <p>{props.newComment.comment}</p>\r\n                            :<>\r\n                                <input type=\"text\" defaultValue={props.newComment.comment} ref={inputHandler}/>\r\n                                <img src=\"/assets/check.svg\" alt=\"send\" onClick={()=>props.edit(props.newComment._id, inputHandler.current.value, props.token)}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        <img src=\"/assets/pencil.svg\" alt=\"pencil\" onClick={()=>setModifyComment(!modifyComment)} />\r\n                        <img src=\"/assets/trash.svg\" alt=\"trash\" onClick={confirmDeletion}/>  \r\n                    </div>\r\n\r\n    const renderComment = user ? comment : <p>{props.newComment.comment}</p> \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"textArea\"> \r\n            <div className=\"profilePic\" style={{backgroundImage:`url(\"${props.newComment.userId.src}\")` }}> </div>\r\n            <div>\r\n                <h6>{props.newComment.userId.firstName}</h6>\r\n                {renderComment}  \r\n            </div>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.users.token,\r\n        _id: state.users._id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment)","// import Swal from 'sweetalert2'\r\nimport {  useState, useRef } from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport commentsActions from \"../redux/actions/itinerariesActions\"\r\nimport Comment from \"./Comment\"\r\n\r\nconst Comments = (props) => {\r\n\r\n    const [allComments, setAllComments] = useState (props.comments)\r\n    const [update, setUpdate] = useState (false)\r\n    const inputHandler = useRef()\r\n\r\n    const addNewComment = (e) => {\r\n        let textValue = inputHandler.current.value\r\n        props.addComment(props.itineraryId, textValue, props.token)\r\n        .then((res)=> {\r\n            setAllComments(res.response)   \r\n            inputHandler.current.value = \"\"   \r\n        })\r\n        .catch(error=>console.log(error))\r\n        \r\n    }\r\n\r\n    const deleteComment = (itineraryId, commentId, token) =>  {\r\n        props.deleteComment(itineraryId, commentId, token)\r\n        .then(res=>{\r\n            if (res.success) {\r\n                setAllComments(allComments.filter(comment=>comment._id !== commentId))\r\n            } else {\r\n                throw new Error()\r\n            }   \r\n        })\r\n        .catch(error =>console.log(error))\r\n    }\r\n\r\n    const editComment = (commentId, comment, token) => {\r\n        props.editComment(commentId, comment, token)\r\n        .then((res)=> {\r\n            if(res.success) {\r\n            allComments.forEach(updatedComment=>{\r\n                if(updatedComment._id === commentId){\r\n                    updatedComment.comment = comment\r\n                }\r\n            })\r\n            setAllComments(allComments)\r\n            setUpdate(!update)\r\n            }\r\n        })\r\n        .catch(error =>console.log(error))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h4>Comments</h4>\r\n            \r\n                <div className=\"comments\">\r\n                \r\n                    {\r\n                        allComments.map((comment)=><Comment key={comment._id} newComment={comment} delete={deleteComment} itineraryId={props.itineraryId} edit={editComment} updateComment={update}/>\r\n                        )\r\n                    }\r\n                </div>\r\n               <div className=\"commentInputContainer\"> \r\n                    <input type=\"text\" className=\"commentsInputs\" autoComplete=\"nope\"\r\n                     ref={inputHandler} name=\"comment\"\r\n                    disabled={props.token ? false : true}\r\n                    placeholder={props.token ? \"Leave a coment!\" : \"You have to log in to comment\"}\r\n                    />\r\n             \r\n              <button className=\"sendComment\" onClick={addNewComment}\r\n              disabled={props.token ? false : true}>Send</button>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      token: state.users.token\r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addComment: commentsActions.addComment,\r\n    editComment: commentsActions.editComment,\r\n    deleteComment: commentsActions.deleteComment\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)","import { useState, useEffect} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport activitiesActions from \"../redux/actions/activitiesActions\"\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\"\r\nimport Activity from \"./Activity\"\r\nimport Comments from \"./Comments\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Itinerary = (props) => {\r\n    const [activities, setActivities] = useState([])\r\n    const [collapse, setCollapse] = useState(true)\r\n    const [like, setLike] = useState(true)\r\n\r\n    const [itinerariesLikes, setItinerariesLikes] = useState(props.Itineraries.likes)\r\n    \r\n    useEffect(() => {\r\n        props.getActivitiesByItinerary(props.Itineraries._id)\r\n        .then((res) => {\r\n            setActivities(res)\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [collapse])\r\n    \r\n    \r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener('mouseenter', Swal.stopTimer)\r\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n\r\n    let itinerariesInfo = props.Itineraries\r\n\r\n    const toggleInfo = () => {\r\n        setCollapse(!collapse)\r\n    }\r\n\r\n    const hashtags = itinerariesInfo.hashtags.map((hashtag, index) => {\r\n        return (\r\n            <p key={index}>{\"#\" + hashtag}</p>\r\n        )\r\n    })\r\n\r\n    const likeItinerary = async () => {\r\n        setLike(false) \r\n        if(!props.token) {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                 title: 'You must be logged to like this post!'\r\n              })  \r\n        }else {\r\n        let response = await props.likeDislike(props.Itineraries._id, props.token)\r\n        setItinerariesLikes(response.data.response)\r\n        } \r\n    setLike(true)\r\n    }\r\n    \r\n    let heart = itinerariesLikes.includes(props.userId) ? \"/assets/heartFull.svg\" : \"/assets/heart.svg\"\r\n    \r\n    return (\r\n        <div className=\"itinerary\">\r\n            <h3>{itinerariesInfo.itineraryTitle}</h3>\r\n            <div className=\"itineraryContent\">\r\n                <div className=\"itineraryInfo\">\r\n                    <div className=\"author\">\r\n                        <div className=\"authorPicture\" style={{backgroundImage: `url(\"${itinerariesInfo.userPicture}\")`}}></div>\r\n                        <h4>{itinerariesInfo.userName}</h4>\r\n                    </div>\r\n                    <p>{itinerariesInfo.description}</p>\r\n                    <div className=\"iconContainer\">\r\n                        <p>{\"💰\".repeat(parseInt(itinerariesInfo.price))}</p>\r\n                        <p>{\"🕓\" + itinerariesInfo.duration + \"hs\"}</p>\r\n                        <div className=\"likes\">\r\n                        <img src={heart} onClick={likeItinerary }/>\r\n                        <p>{itinerariesLikes.length}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hashtags\">{hashtags}</div>\r\n                </div>\r\n            \r\n                <div className=\"cityPicture\" style={{backgroundImage: `url(\"${itinerariesInfo.src}\")`}}></div>\r\n            </div>\r\n            <div className=\"activitiesContainer\">\r\n                <div className = {collapse ? \"hide\" : \"show\"}>\r\n                    <h4>Activities</h4>\r\n                    <div className=\"activities\">\r\n                        {!collapse \r\n                        ?  activities.map((activities) => <Activity Activities={activities}  key={activities._id}/>)\r\n                        : null}\r\n                    </div>\r\n                    <Comments itineraryId={props.Itineraries._id} comments={props.Itineraries.comments}/>\r\n                </div>\r\n                \r\n                \r\n                <button className=\"viewMore\" onClick={toggleInfo}>{collapse ? \" View More\" : \"View Less\"}</button>\r\n           \r\n            </div>\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.users.token,\r\n        firstName: state.users.firstName,\r\n        src: state.users.src,\r\n        userId: state.users._id\r\n    }\r\n}\r\n \r\nconst mapDispatchToProps = {\r\n    getActivitiesByItinerary: activitiesActions.getActivitiesByItinerary,\r\n    likeDislike: itinerariesActions.likeDislike\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary) ","const NoItineraries = () => {\r\n    return (\r\n        <div className=\"itinerary\">\r\n            <h3>Sorry!</h3>\r\n            <p>There are no itineraries for this city yet. Check out later!</p>\r\n            <img src=\"/assets/error.gif\" alt=\"paper plane flying\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoItineraries","import  Nav  from \"../components/NavBar\"\r\nimport Footer from \"../components/Footer\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Itinerary from \"../components/Itinerary\"\r\nimport {connect} from \"react-redux\" \r\nimport citiesActions from \"../redux/actions/citiesActions\"\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\"\r\nimport NoItineraries from \"../components/NoItineraries\"\r\n\r\nconst City = (props) => {\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        if(props.allCities.length === 0){\r\n            props.history.push(\"/cities\")\r\n            return false\r\n        }\r\n        props.getOneCity(props.match.params._id)\r\n        props.getItineraryByCity(props.match.params._id)\r\n        setLoading(false)\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">\r\n            <img src=\"/assets/flying-airplane.gif\" alt=\"plane flying gif\"/>\r\n            <h3>Loading...</h3>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav/>\r\n            <main>\r\n                <div className=\"heroCity\" \r\n                style={{backgroundImage: `url(\"${props.selectedCity.hero}\")`}}>\r\n                </div>\r\n                <div className=\"cityName\">\r\n                    <h3>{props.selectedCity.city}</h3>\r\n                </div>\r\n                <div className=\"cityDescription\">{props.selectedCity.description}</div>\r\n                <div>\r\n                    {props.cityItineraries.length !==0 \r\n                    ? props.cityItineraries.map((itineraries) => <Itinerary Itineraries={itineraries} key={itineraries.id}/>)\r\n                    : <NoItineraries/>}\r\n                </div>\r\n                <div className=\"construction\">\r\n                    {/* <img src=\"/assets/under_construction.jpg\" alt=\"under construction\"/> */}\r\n                    <Link to=\"/cities\"><button>Go back to cities</button></Link>\r\n                    \r\n                </div> \r\n            </main>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       selectedCity : state.cities.oneCity,\r\n       cityItineraries: state.itineraries.cityItineraries,\r\n       allCities: state.cities.filteredCities\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getOneCity: citiesActions.getOneCity,\r\n    getAllCities: citiesActions.getAllCities,\r\n    getItineraryByCity: itinerariesActions.getItineraryByCity\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(City)","import NavBar from \"../components/NavBar\"\r\nimport {useEffect, useState} from \"react\"\r\nimport axios from \"axios\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Swal from 'sweetalert2'\r\nimport {connect} from \"react-redux\" \r\nimport usersActions from \"../redux/actions/usersActions\"\r\nimport GoogleLogin from 'react-google-login'\r\n\r\nconst SignUp = (props) => {\r\n    const [newUser, setNewUser] = useState ({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        src: \"\",\r\n        country: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const [errorInput, setErrorInput] = useState({})\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener('mouseenter', Swal.stopTimer)\r\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n \r\n    const countries = [\"Egypt\", \"Canada\", \"Australia\", \"Ireland\", \"Argentina\", \"Colombia\", \"Peru\",\"United States\", \"Chile\", \"China\", \"Japan\", \"Pakistan\", \"Colombia\", \"Uruguay\", \"Cuba\"]\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(`https://restcountries.eu/rest/v2/all?fields=name`)\r\n    //     .then((response) => \r\n    //     setCountries(response.data))\r\n    //     .catch((error) => console.log(error))\r\n    \r\n    // // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [])\r\n   \r\n    const inputHandler = (e) => {\r\n        setNewUser({\r\n            ...newUser,\r\n            [e.target.name]: e.target.value\r\n            \r\n        })\r\n    }\r\n    const submitForm = () => {\r\n        let info = Object.values(newUser).some((infoUser) => infoUser === \"\")\r\n        if (info) {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'There are fields incomplete, please complete them.'\r\n              })\r\n        } else {\r\n            props.signUp(newUser)\r\n        .then((response) => {\r\n            if (response.data.success){\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                     title: 'Your account has been created!'\r\n                  })\r\n            } else if (response.data.errors){\r\n                setErrorInput({})\r\n                response.data.errors.map(error => setErrorInput(messageError => {\r\n                        return {\r\n                            ...messageError, \r\n                        [error.path]: error.message,\r\n                        }\r\n                    }\r\n                    )  \r\n                   \r\n                )\r\n               \r\n            } else {\r\n                Toast.fire({\r\n                    icon: 'error',\r\n                    title: 'That email has already been used! Try with another one.'\r\n                  })\r\n            }\r\n        })        \r\n        .catch((error) => {\r\n            console.log(error)\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'We are having technical difficulties! Come back later!'\r\n              })\r\n            })\r\n        }\r\n    }\r\n    const responseGoogle = (res) => {\r\n        let googleUser = {\r\n            firstName: res.profileObj.givenName,\r\n            lastName: res.profileObj.familyName,\r\n            src: res.profileObj.imageUrl,\r\n            country: \"Argentina\",\r\n            email: res.profileObj.email,\r\n            password: res.profileObj.googleId,\r\n            google: true, \r\n        }\r\n         props.signUp(googleUser)\r\n        .then((response) => {\r\n            if (response.data.success){\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                     title: 'Your account has been created!'\r\n                  })\r\n            }\r\n            else{\r\n            setErrorInput(response.data.error)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Something went wrong! Come back later!'\r\n              })\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <main>\r\n            <NavBar/>\r\n            <div className=\"airport\" style={{backgroundImage: `url(\"/assets/airport.jpg\")`}}>\r\n\r\n              <div className=\"userForm\">\r\n                <h3>Create an Account!</h3>\r\n                {/* poner en 2 divs los inputs */}\r\n                <form>\r\n                    <div className=\"inputs\">\r\n                        <input type=\"text\" onChange={inputHandler}  name=\"firstName\" placeholder=\"First Name\" autoComplete=\"nope\"/>\r\n                        <p>{errorInput.firstName}</p>\r\n                        <input type=\"text\" onChange={inputHandler} name=\"lastName\" placeholder=\"Last Name\" autoComplete=\"nope\"/>\r\n                        <p>{errorInput.lastName}</p>\r\n                        <input type=\"url\" onChange={inputHandler} name=\"src\" placeholder=\"Url of your picture\" autoComplete=\"nope\"/>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <select name=\"country\" onChange={inputHandler}>\r\n                            <option>Choose your country</option>\r\n                            {countries.map((country,index) => \r\n                            <option key={index} value={country.name}> \r\n                                {country.name}\r\n                            </option>)}\r\n                        </select>\r\n                        <input type=\"email\" onChange={inputHandler} name=\"email\" placeholder=\"Email\" autoComplete=\"nope\"/>\r\n                        <p>{errorInput.email}</p>\r\n                        <input type=\"password\" onChange={inputHandler} name=\"password\" placeholder=\"Password\" autoComplete=\"nope\"/>\r\n                        <p>{errorInput.password}</p>\r\n                    </div>\r\n                </form>\r\n                <button onClick={submitForm}>Sign Up</button>\r\n                <GoogleLogin\r\n                    clientId=\"556133798915-04cvch3go6p7e8emmtorfuogaa933l4h.apps.googleusercontent.com\"\r\n                    buttonText=\"Sign Up with Google\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n                  <span className=\"logIn/signUp\">\r\n                    <h5>Already have an account?</h5>\r\n                    <Link to=\"/logIn\"><h5>Log In</h5></Link>\r\n                </span>\r\n            </div>\r\n            </div>\r\n           \r\n        </main>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signUp: usersActions.signUp\r\n\r\n}\r\n\r\nexport default connect (null, mapDispatchToProps)(SignUp) ","import NavBar from \"../components/NavBar\"\r\nimport {useState} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Swal from 'sweetalert2'\r\nimport {connect} from \"react-redux\"\r\nimport usersActions from \"../redux/actions/usersActions\"\r\nimport GoogleLogin from 'react-google-login'\r\n\r\nconst LogIn = (props) => {\r\n    const [logUser, setLogUser] = useState ({\r\n        email: \"\", \r\n        password: \"\",\r\n    })\r\n\r\n    const [errorInput, setErrorInput] = useState(null)\r\n    \r\n    const inputHandler = (e) => {\r\n        setLogUser({\r\n            ...logUser,\r\n            [e.target.name]: e.target.value\r\n            \r\n        })\r\n    }\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener('mouseenter', Swal.stopTimer)\r\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n    \r\n\r\n    const submitForm = () => {\r\n        let info = Object.values(logUser).some((infoUser) => infoUser === \"\")\r\n        if (info) {\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'There are fields incomplete, please complete them.'\r\n              })\r\n\r\n        } else {\r\n            props.logUser(logUser)\r\n            // axios.post(\"https://gillone-mytinerary.herokuapp.com/api/user/logIn\", logUser)\r\n        .then((response) => {\r\n            if (!response.data.success){\r\n                // Toast.fire({\r\n                //     icon: 'error',\r\n                //     title: 'Email and/or password incorrect'\r\n                //   })\r\n                alert(response.data.response)//camnbiar alert feo\r\n            } else {\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Welcome back!'\r\n                  })\r\n            }\r\n        })        \r\n        .catch((error) => Toast.fire({\r\n                icon: 'error',\r\n                title: 'Email and/or password incorrect'\r\n              })\r\n        // alert(error)//\r\n        )//catchear comunicacion con BD\r\n        }\r\n    }\r\n\r\n    const responseGoogle =  res => {\r\n        let logGoogleUser = {\r\n            email: res.profileObj.email,\r\n            password: res.profileObj.googleId,\r\n            googleFlag: true\r\n        }\r\n        props.logUser(logGoogleUser)\r\n        .then((response) => {\r\n            if (response.data.success){\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                     title: 'Welcome back!'\r\n                  })\r\n            }\r\n            else{\r\n            setErrorInput(response.data.error)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'You have to sign up before you log in!'\r\n              })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <NavBar/>\r\n                \r\n                <div className=\"jetway\" style={{backgroundImage: `url(\"/assets/jetway.jpg\")`}}>\r\n                   <div className=\"userForm\">\r\n                    <h3>Welcome back!</h3>\r\n                    <form>\r\n                        <input type=\"email\" onChange={inputHandler} name=\"email\" placeholder=\"Email\" autoComplete=\"nope\"/>\r\n                        <input type=\"password\" onChange={inputHandler} name=\"password\" placeholder=\"Password\" autoComplete=\"nope\"/>\r\n                    </form>\r\n                    <button onClick={submitForm}>Log In</button>\r\n                    <GoogleLogin\r\n                    clientId=\"556133798915-04cvch3go6p7e8emmtorfuogaa933l4h.apps.googleusercontent.com\"\r\n                    buttonText=\"Log in with Google\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <span className=\"logIn/signUp\">\r\n                        <h5>You don't have an account yet?</h5>\r\n                        <Link to=\"/signUp\"><h5>Sign Up</h5></Link>\r\n                    </span>\r\n                    \r\n                </div> \r\n                </div>\r\n            </main>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logUser: usersActions.logUser\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn)","import {Link} from \"react-router-dom\"\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className=\"notFound\">\r\n            <h2>We couldn't find what you're looking for!</h2>\r\n            <img src=\"/assets/error.gif\" alt=\"paper plane flying\"/>\r\n            <Link to=\"/cities\"><button>Go back to Cities</button></Link>\r\n            <Link to=\"/\"><button>Go to Home</button></Link>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Error404","import \"bootstrap/dist/js/bootstrap.bundle.min.js\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./App.css\"\r\nimport Home from \"./pages/Home\"\r\nimport Cities from \"./pages/Cities\"\r\nimport City from \"./pages/City\"\r\nimport SignUp from \"./pages/SignUp\"\r\nimport LogIn from \"./pages/LogIn\"\r\nimport Error404 from \"./pages/Error404\"\r\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport usersActions from \"./redux/actions/usersActions\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")){\r\n      props.logInLS(localStorage.getItem(\"token\"))\r\n\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/cities\" component={Cities}/>\r\n            <Route path=\"/city/:_id\" component={City}/>\r\n            <Route path=\"/notFound\" component={Error404}/>\r\n            {!props.token && (<Route path=\"/signUp\" component={SignUp}/>)}\r\n            {!props.token && (<Route path=\"/logIn\" component={LogIn}/>)}\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.users.token\r\n  }\r\n  \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logInLS: usersActions.logInLS\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const citiesReducer = (state={allCities:[], filteredCities:[], oneCity:[],}, action) => {\r\n    switch(action.type){\r\n        case \"GET_ALL_CITIES\":\r\n            return {\r\n                ...state,\r\n                allCities: action.payload,\r\n                filteredCities: action.payload\r\n                \r\n            }\r\n        case \"FILTER_CITIES\": \r\n            return {\r\n                ...state, \r\n                filteredCities: state.allCities.filter((city) => (city.city.toLowerCase().startsWith(action.payload.toLowerCase().trim()))),\r\n            }\r\n\r\n        case \"GET_ONE_CITY\":\r\n            return {\r\n                ...state, \r\n                oneCity: state.allCities.find((city) => city._id === action.payload)\r\n            }\r\n        default: \r\n            return (\r\n                state\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default citiesReducer","const itinerariesReducers = (state={cityItineraries:[]}, action) => {\r\n    switch(action.type){\r\n        case \"GET_ITINERARY_BY_CITYID\": \r\n            return {\r\n                ...state,\r\n                cityItineraries: action.payload\r\n            }\r\n        default: \r\n            return (\r\n                state\r\n            )    \r\n    }\r\n}\r\n\r\nexport default itinerariesReducers","const usersReducers = (state= {token: null, firstName: null, src: null, _id: null}, action) => {\r\n    switch(action.type){\r\n        case \"LOGGED\": \r\n            localStorage.setItem(\"token\", action.payload.token)\r\n            localStorage.setItem(\"name\", action.payload.firstName)\r\n            localStorage.setItem(\"src\", action.payload.src)\r\n            localStorage.setItem(\"_id\", action.payload._id)\r\n            return {\r\n                token: action.payload.token, \r\n                firstName: action.payload.firstName,\r\n                src: action.payload.src,\r\n                _id: action.payload._id\r\n            }\r\n        case \"LOG_OUT\":\r\n            localStorage.removeItem(\"token\")\r\n            localStorage.removeItem(\"name\")\r\n            localStorage.removeItem(\"src\")\r\n            localStorage.removeItem(\"_id\")\r\n            return {\r\n                token: null,\r\n                firstName: null, \r\n                src: null,\r\n                _id: null,\r\n            }\r\n        default: \r\n        return (\r\n            state\r\n        )\r\n    }\r\n}\r\n\r\nexport default usersReducers","import {combineReducers} from \"redux\"\r\nimport citiesReducer from \"./citiesReducers\"\r\nimport itinerariesReducer from \"./itinerariesReducers\"\r\nimport usersReducers from \"./usersReducers\"\r\n\r\nconst rootReducer = combineReducers ({\r\n    cities: citiesReducer,\r\n    itineraries: itinerariesReducer, \r\n    users: usersReducers,\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\"\n\nconst globalStore = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={globalStore}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}